---
- name: Run ctorgalson.macosbox role on macOS infrastructure.
  hosts: all
  gather_facts: true
  become: true
  tasks:
    - name: Load all default variables.
      include_vars:
        dir: ../defaults

    # Test ssh keys
    - name: Verify ssh directory exists and has correct properties.
      block:
        - name: Get information about ssh directory.
          stat:
            path: "{{ mb_ssh_dir }}"
          register: mb_test_ssh_dir_stat

        - name: Use stat information to verify properties.
          assert:
            that:
              - "mb_test_ssh_dir_stat.stat.exists"
              - "mb_test_ssh_dir_stat.stat.isdir"
              - "mb_test_ssh_dir_stat.stat.mode == mb_ssh_dir_mode"
              - "mb_test_ssh_dir_stat.stat.pw_name == mb_user"
              - "mb_test_ssh_dir_stat.stat.gr_name == mb_group"

    - name: Verify ssh keys exist and have correct properties.
      block:
        - name: Debug the contents of the ssh directory.
          command: "ls -hal ."
          args:
            chdir: "{{ mb_ssh_dir }}"

        - name: First find the LOCAL ssh keys.
          find:
            paths: "{{ mb_ssh_dir }}"
          register: mb_test_ssh_keys
          delegate_to: localhost

        - name: Get information about the REMOTE ssh keys.
          stat:
            path: "{{ mb_ssh_dir + '/' + key.path | basename }}"
          loop: "{{ mb_test_ssh_keys.files }}"
          loop_control:
            loop_var: key
          register: mb_test_ssh_keys_stat

        - name: Debug mb_test_ssh_keys_stat
          debug:
            var: mb_test_ssh_keys_stat

        - name: Use stat information to verify key properties.
          assert:
            that:
              - "key.key.stat.exists"
              - "key.key.stat.isfile"
              # - "{{ ((key.key.stat.path | basename | splitext)[0] == 'pub') | ternary(mb_ssh_public_key_mode, mb_ssh_private_key_mode) }}"
              - "key.key.stat.pw_name == mb_user"
              - "key.key.stat.gr_name == mbgroup"
          loop: "{{ mb_test_ssh_keys_stat }}"
          loop_control:
            loop_var: key
